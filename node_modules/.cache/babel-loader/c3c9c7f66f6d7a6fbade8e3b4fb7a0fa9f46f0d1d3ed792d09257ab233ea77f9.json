{"ast":null,"code":"var _jsxFileName = \"/Users/bmcmanus/DDE-Math-Analysis/src/components/GradeAnalysis.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GradeAnalysis = ({\n  data\n}) => {\n  if (!data || data.length === 0) return null;\n\n  // Example: Calculate averages per grade\n  const gradeSummary = data.reduce((acc, row) => {\n    const grade = row.Grade;\n    if (!acc[grade]) {\n      acc[grade] = {\n        totalTime: 0,\n        totalStudents: 0,\n        totalPass: 0,\n        studentCount: 0\n      };\n    }\n    acc[grade].totalTime += parseInt(row['Average Lesson Time-on-Task per Student (Mins)'], 10) || 0;\n    acc[grade].totalPass += parseInt(row['% Lessons Passed (YTD)'], 10) || 0;\n    acc[grade].studentCount += 1;\n    return acc;\n  }, {});\n  const gradeAnalysis = Object.keys(gradeSummary).map(grade => ({\n    grade,\n    avgTime: (gradeSummary[grade].totalTime / gradeSummary[grade].studentCount).toFixed(2),\n    avgPassRate: (gradeSummary[grade].totalPass / gradeSummary[grade].studentCount).toFixed(2)\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Grade Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Average Time-on-Task (mins)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Average % Pass Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: gradeAnalysis.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.grade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.avgTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [item.avgPassRate, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, item.grade, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\nexport default GradeAnalysis;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GradeAnalysis","data","length","gradeSummary","reduce","acc","row","grade","Grade","totalTime","totalStudents","totalPass","studentCount","parseInt","gradeAnalysis","Object","keys","map","avgTime","toFixed","avgPassRate","children","fileName","_jsxFileName","lineNumber","columnNumber","item"],"sources":["/Users/bmcmanus/DDE-Math-Analysis/src/components/GradeAnalysis.jsx"],"sourcesContent":["import React from 'react';\n\nconst GradeAnalysis = ({ data }) => {\n  if (!data || data.length === 0) return null;\n\n  // Example: Calculate averages per grade\n  const gradeSummary = data.reduce((acc, row) => {\n    const grade = row.Grade;\n    if (!acc[grade]) {\n      acc[grade] = {\n        totalTime: 0,\n        totalStudents: 0,\n        totalPass: 0,\n        studentCount: 0,\n      };\n    }\n    acc[grade].totalTime += parseInt(row['Average Lesson Time-on-Task per Student (Mins)'], 10) || 0;\n    acc[grade].totalPass += parseInt(row['% Lessons Passed (YTD)'], 10) || 0;\n    acc[grade].studentCount += 1;\n    return acc;\n  }, {});\n\n  const gradeAnalysis = Object.keys(gradeSummary).map((grade) => ({\n    grade,\n    avgTime: (gradeSummary[grade].totalTime / gradeSummary[grade].studentCount).toFixed(2),\n    avgPassRate: (gradeSummary[grade].totalPass / gradeSummary[grade].studentCount).toFixed(2),\n  }));\n\n  return (\n    <div>\n      <h2>Grade Analysis</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Grade</th>\n            <th>Average Time-on-Task (mins)</th>\n            <th>Average % Pass Rate</th>\n          </tr>\n        </thead>\n        <tbody>\n          {gradeAnalysis.map((item) => (\n            <tr key={item.grade}>\n              <td>{item.grade}</td>\n              <td>{item.avgTime}</td>\n              <td>{item.avgPassRate}%</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default GradeAnalysis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}