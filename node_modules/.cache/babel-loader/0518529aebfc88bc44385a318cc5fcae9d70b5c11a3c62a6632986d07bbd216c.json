{"ast":null,"code":"var _jsxFileName = \"/Users/bmcmanus/DDE-Math-Analysis/src/components/EfficiencyScatter.jsx\";\nimport React from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EfficiencyScatter = ({\n  data\n}) => {\n  if (!data || data.length === 0) return null;\n\n  // Prepare data for scatter plot\n  const scatterData = data.map(row => ({\n    time: parseInt(row['Average Lesson Time-on-Task per Student (Mins)'], 10) || 0,\n    passRate: parseInt(row['% Lessons Passed (YTD)'], 10) || 0,\n    grade: row.Grade\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Efficiency Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScatterChart, {\n      width: 800,\n      height: 400,\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        type: \"number\",\n        dataKey: \"time\",\n        name: \"Time-on-Task\",\n        unit: \" mins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        type: \"number\",\n        dataKey: \"passRate\",\n        name: \"Pass Rate\",\n        unit: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        cursor: {\n          strokeDasharray: '3 3'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n        name: \"Grade Data\",\n        data: scatterData,\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\nexport default EfficiencyScatter;","map":{"version":3,"names":["React","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","EfficiencyScatter","data","length","scatterData","map","row","time","parseInt","passRate","grade","Grade","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","bottom","left","type","dataKey","name","unit","cursor","strokeDasharray","fill"],"sources":["/Users/bmcmanus/DDE-Math-Analysis/src/components/EfficiencyScatter.jsx"],"sourcesContent":["import React from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nconst EfficiencyScatter = ({ data }) => {\n  if (!data || data.length === 0) return null;\n\n  // Prepare data for scatter plot\n  const scatterData = data.map((row) => ({\n    time: parseInt(row['Average Lesson Time-on-Task per Student (Mins)'], 10) || 0,\n    passRate: parseInt(row['% Lessons Passed (YTD)'], 10) || 0,\n    grade: row.Grade,\n  }));\n\n  return (\n    <div>\n      <h2>Efficiency Analysis</h2>\n      <ScatterChart\n        width={800}\n        height={400}\n        margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n      >\n        <CartesianGrid />\n        <XAxis type=\"number\" dataKey=\"time\" name=\"Time-on-Task\" unit=\" mins\" />\n        <YAxis type=\"number\" dataKey=\"passRate\" name=\"Pass Rate\" unit=\"%\" />\n        <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n        <Legend />\n        <Scatter name=\"Grade Data\" data={scatterData} fill=\"#8884d8\" />\n      </ScatterChart>\n    </div>\n  );\n};\n\nexport default EfficiencyScatter;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/F,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACtC,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;;EAE3C;EACA,MAAMC,WAAW,GAAGF,IAAI,CAACG,GAAG,CAAEC,GAAG,KAAM;IACrCC,IAAI,EAAEC,QAAQ,CAACF,GAAG,CAAC,gDAAgD,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC;IAC9EG,QAAQ,EAAED,QAAQ,CAACF,GAAG,CAAC,wBAAwB,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC;IAC1DI,KAAK,EAAEJ,GAAG,CAACK;EACb,CAAC,CAAC,CAAC;EAEH,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BhB,OAAA,CAACR,YAAY;MACXyB,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE,GAAI;MACZC,MAAM,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAE;MAAAX,QAAA,gBAErDZ,OAAA,CAACJ,aAAa;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjBhB,OAAA,CAACN,KAAK;QAAC8B,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAC,MAAM;QAACC,IAAI,EAAC,cAAc;QAACC,IAAI,EAAC;MAAO;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvEhB,OAAA,CAACL,KAAK;QAAC6B,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAC,UAAU;QAACC,IAAI,EAAC,WAAW;QAACC,IAAI,EAAC;MAAG;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpEhB,OAAA,CAACH,OAAO;QAAC+B,MAAM,EAAE;UAAEC,eAAe,EAAE;QAAM;MAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/ChB,OAAA,CAACF,MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVhB,OAAA,CAACP,OAAO;QAACiC,IAAI,EAAC,YAAY;QAACxB,IAAI,EAAEE,WAAY;QAAC0B,IAAI,EAAC;MAAS;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAED,eAAef,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}