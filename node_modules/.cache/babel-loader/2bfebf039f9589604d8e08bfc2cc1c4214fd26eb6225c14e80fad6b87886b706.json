{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GradeAnalysis=_ref=>{let{data}=_ref;if(!data||data.length===0)return null;// Example: Calculate averages per grade\nconst gradeSummary=data.reduce((acc,row)=>{const grade=row.Grade;if(!acc[grade]){acc[grade]={totalTime:0,totalStudents:0,totalPass:0,studentCount:0};}acc[grade].totalTime+=parseInt(row['Average Lesson Time-on-Task per Student (Mins)'],10)||0;acc[grade].totalPass+=parseInt(row['% Lessons Passed (YTD)'],10)||0;acc[grade].studentCount+=1;return acc;},{});const gradeAnalysis=Object.keys(gradeSummary).map(grade=>({grade,avgTime:(gradeSummary[grade].totalTime/gradeSummary[grade].studentCount).toFixed(2),avgPassRate:(gradeSummary[grade].totalPass/gradeSummary[grade].studentCount).toFixed(2)}));return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Grade Analysis\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Grade\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Average Time-on-Task (mins)\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Average % Pass Rate\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:gradeAnalysis.map(item=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:item.grade}),/*#__PURE__*/_jsx(\"td\",{children:item.avgTime}),/*#__PURE__*/_jsxs(\"td\",{children:[item.avgPassRate,\"%\"]})]},item.grade))})]})]});};export default GradeAnalysis;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","GradeAnalysis","_ref","data","length","gradeSummary","reduce","acc","row","grade","Grade","totalTime","totalStudents","totalPass","studentCount","parseInt","gradeAnalysis","Object","keys","map","avgTime","toFixed","avgPassRate","children","item"],"sources":["/Users/bmcmanus/DDE-Math-Analysis/src/components/GradeAnalysis.jsx"],"sourcesContent":["import React from 'react';\n\nconst GradeAnalysis = ({ data }) => {\n  if (!data || data.length === 0) return null;\n\n  // Example: Calculate averages per grade\n  const gradeSummary = data.reduce((acc, row) => {\n    const grade = row.Grade;\n    if (!acc[grade]) {\n      acc[grade] = {\n        totalTime: 0,\n        totalStudents: 0,\n        totalPass: 0,\n        studentCount: 0,\n      };\n    }\n    acc[grade].totalTime += parseInt(row['Average Lesson Time-on-Task per Student (Mins)'], 10) || 0;\n    acc[grade].totalPass += parseInt(row['% Lessons Passed (YTD)'], 10) || 0;\n    acc[grade].studentCount += 1;\n    return acc;\n  }, {});\n\n  const gradeAnalysis = Object.keys(gradeSummary).map((grade) => ({\n    grade,\n    avgTime: (gradeSummary[grade].totalTime / gradeSummary[grade].studentCount).toFixed(2),\n    avgPassRate: (gradeSummary[grade].totalPass / gradeSummary[grade].studentCount).toFixed(2),\n  }));\n\n  return (\n    <div>\n      <h2>Grade Analysis</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Grade</th>\n            <th>Average Time-on-Task (mins)</th>\n            <th>Average % Pass Rate</th>\n          </tr>\n        </thead>\n        <tbody>\n          {gradeAnalysis.map((item) => (\n            <tr key={item.grade}>\n              <td>{item.grade}</td>\n              <td>{item.avgTime}</td>\n              <td>{item.avgPassRate}%</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default GradeAnalysis;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CAC7B,GAAI,CAACC,IAAI,EAAIA,IAAI,CAACC,MAAM,GAAK,CAAC,CAAE,MAAO,KAAI,CAE3C;AACA,KAAM,CAAAC,YAAY,CAAGF,IAAI,CAACG,MAAM,CAAC,CAACC,GAAG,CAAEC,GAAG,GAAK,CAC7C,KAAM,CAAAC,KAAK,CAAGD,GAAG,CAACE,KAAK,CACvB,GAAI,CAACH,GAAG,CAACE,KAAK,CAAC,CAAE,CACfF,GAAG,CAACE,KAAK,CAAC,CAAG,CACXE,SAAS,CAAE,CAAC,CACZC,aAAa,CAAE,CAAC,CAChBC,SAAS,CAAE,CAAC,CACZC,YAAY,CAAE,CAChB,CAAC,CACH,CACAP,GAAG,CAACE,KAAK,CAAC,CAACE,SAAS,EAAII,QAAQ,CAACP,GAAG,CAAC,gDAAgD,CAAC,CAAE,EAAE,CAAC,EAAI,CAAC,CAChGD,GAAG,CAACE,KAAK,CAAC,CAACI,SAAS,EAAIE,QAAQ,CAACP,GAAG,CAAC,wBAAwB,CAAC,CAAE,EAAE,CAAC,EAAI,CAAC,CACxED,GAAG,CAACE,KAAK,CAAC,CAACK,YAAY,EAAI,CAAC,CAC5B,MAAO,CAAAP,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CAEN,KAAM,CAAAS,aAAa,CAAGC,MAAM,CAACC,IAAI,CAACb,YAAY,CAAC,CAACc,GAAG,CAAEV,KAAK,GAAM,CAC9DA,KAAK,CACLW,OAAO,CAAE,CAACf,YAAY,CAACI,KAAK,CAAC,CAACE,SAAS,CAAGN,YAAY,CAACI,KAAK,CAAC,CAACK,YAAY,EAAEO,OAAO,CAAC,CAAC,CAAC,CACtFC,WAAW,CAAE,CAACjB,YAAY,CAACI,KAAK,CAAC,CAACI,SAAS,CAAGR,YAAY,CAACI,KAAK,CAAC,CAACK,YAAY,EAAEO,OAAO,CAAC,CAAC,CAC3F,CAAC,CAAC,CAAC,CAEH,mBACErB,KAAA,QAAAuB,QAAA,eACEzB,IAAA,OAAAyB,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBvB,KAAA,UAAAuB,QAAA,eACEzB,IAAA,UAAAyB,QAAA,cACEvB,KAAA,OAAAuB,QAAA,eACEzB,IAAA,OAAAyB,QAAA,CAAI,OAAK,CAAI,CAAC,cACdzB,IAAA,OAAAyB,QAAA,CAAI,6BAA2B,CAAI,CAAC,cACpCzB,IAAA,OAAAyB,QAAA,CAAI,qBAAmB,CAAI,CAAC,EAC1B,CAAC,CACA,CAAC,cACRzB,IAAA,UAAAyB,QAAA,CACGP,aAAa,CAACG,GAAG,CAAEK,IAAI,eACtBxB,KAAA,OAAAuB,QAAA,eACEzB,IAAA,OAAAyB,QAAA,CAAKC,IAAI,CAACf,KAAK,CAAK,CAAC,cACrBX,IAAA,OAAAyB,QAAA,CAAKC,IAAI,CAACJ,OAAO,CAAK,CAAC,cACvBpB,KAAA,OAAAuB,QAAA,EAAKC,IAAI,CAACF,WAAW,CAAC,GAAC,EAAI,CAAC,GAHrBE,IAAI,CAACf,KAIV,CACL,CAAC,CACG,CAAC,EACH,CAAC,EACL,CAAC,CAEV,CAAC,CAED,cAAe,CAAAR,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}